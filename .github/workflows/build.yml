name: Build and Publish

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish Artifact"
        required: true
        default: "false"

jobs:
  Build_Publish:
    runs-on: product.lambda
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Maven Build
        run: mvn --batch-mode --update-snapshots package
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project
      - name: Show extracted Maven project version
        run: echo ${{ steps.project.outputs.version }}
      - if: github.event.inputs.publish == 'true'
        name: Publish to GitHub Packages Apache Maven
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}
    outputs:
      maven_version: ${{ steps.project.outputs.version }}
  Deploy:
    runs-on: product.lambda
    needs: Build_Publish
    environment: 'dev'
    env:
      version: ${{ needs.Build_Publish.outputs.maven_version }}
    steps:
      - name: Download package
        run: |
          curl 'https://maven.pkg.github.com/DhrubaBaishya/product.lambda/store.product.lambda/${{ needs.Build_Publish.outputs.maven_version }}/product.lambda-${{ needs.Build_Publish.outputs.maven_version }}.jar' \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          -L \
          -O
      - name: List Files
        run: |
          ls
      - name: Clone AWS Infra
        uses: actions/checkout@v2
        with:
          repository: DhrubaBaishya/aws_infra
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: resources/aws/infra
          ref: develop
      - name: Get Config
        run: |
          cp resources/aws/infra/product.lambda.aws/* .
          ls
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-south-1
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -backend-config="region=ap-south-1"
        id: init
        run: terraform init
      - name: Terraform plan -var="maven_project_version=${{ needs.Build_Publish.outputs.maven_version }}" -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -backend-config="region=ap-south-1"
        id: plan
        run: terraform plan
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -input=false -var="maven_project_version=${{ needs.Build_Publish.outputs.maven_version }}" -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -backend-config="region=ap-south-1"